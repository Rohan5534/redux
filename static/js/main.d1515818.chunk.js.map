{"version":3,"sources":["components/shortTask.js","components/shortTaskContainer.js","components/list.js","components/listContainer.js","components/task.js","components/taskContainer.js","components/listCreator.js","App.js","reportWebVitals.js","index.js"],"names":["ShortTask","task","className","isCompleted","length","slice","ShortTaskContainer","tasks","map","currentValue","id","List","list","deleteList","threeTasks","isListComplete","arraySum","currentIter","reduce","a","b","to","name","onClick","ListContainer","mainState","Task","isUpdating","taskId","listId","toggle","handleDelete","startUpdate","endUpdate","useState","stateTask","setStateTask","defaultValue","onChange","e","taskValue","target","value","type","checked","TaskContainer","markAllAsDone","handleSubmit","inputValue","setInputValue","onSubmit","preventDefault","placeholder","ListCreator","createNewList","cancelButton","listName","setListName","inputTask","setInputTaskName","required","App","expression","setMainState","creatingList","setCreatingList","targetId","stateCopy","splice","undefined","push","useLocation","pathname","test","path","component","exact","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1515818.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ShortTask({task}) {\r\n\treturn (\r\n\t\t<div className={task.isCompleted ? 'shortTask-parent-container shortTask-parent-container-completed' : 'shortTask-parent-container'}>\r\n\t\t\t{task.isCompleted ? <i className=\"bi bi-check2-square shortTask-checkbox-checked\"></i> : <i className=\"bi bi-square shortTask-checkbox\"></i> }\r\n\t\t\t<div className='shortTask-task'>\r\n\t\t\t\t{task.task.length <= 16 ? task.task : task.task.slice(0,14)+'...'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ShortTask;","import React from 'react';\r\nimport ShortTask from './shortTask'\r\n\r\nfunction ShortTaskContainer({tasks}) {\r\n\treturn (\r\n\t\t<div className='shortTaskContainer-parent-container'>\r\n\t\t\t{tasks.map((currentValue,id) => <ShortTask key={id} task = {currentValue} />)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ShortTaskContainer;","import React from 'react';\r\nimport ShortTaskContainer from './shortTaskContainer';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction List({list , id , deleteList}) {\r\n\tlet threeTasks = list.tasks.slice(0,3).map(currentValue =>  currentValue)\r\n\r\n\r\n\t// This function will return 0 if none of the tasks are completed return 1 if at least 1 task is completed and return 2 if all of the task are completed\r\n\tconst isListComplete = () => {\r\n\t\tlet tempArr = list.tasks.map(currentIter => { if(currentIter.isCompleted) { return 1 } else return 0})\r\n\t\tlet arraySum = tempArr.reduce((a,b) =>{return a+b }, 0)\r\n\t\tif (arraySum === list.tasks.length){\r\n\t\t\treturn 2\r\n\t\t}\r\n\t\telse if(arraySum >= 1) return 1\r\n\t\telse if(arraySum === 0) return 0\r\n\t}\r\n\r\n\treturn (\r\n\t<div className= {isListComplete() === 2 ? 'list-parent-container completed-list' : isListComplete() === 1 ? 'list-parent-container part-done-list' : 'list-parent-container incomplete-list'}>\r\n\t\t<Link to={`/list/${id}`} className='list-name-link'>\r\n\t\t\t{list.name}\r\n\t\t</Link>\r\n\t\t<Link to={`/list/${id}`}className='list-shortTaskContainer-link'>\r\n\t\t\t{threeTasks.length === 0 ? <div className='list-empty-div'>Yayy , you have no task pending !!!!</div> : <ShortTaskContainer tasks={threeTasks} />}\r\n\t\t</Link>\r\n\t\t<button className='link-delete-btn' onClick={() => deleteList(id)}>\r\n\t\t\tDelete List\r\n\t\t</button>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport List from './list'\r\n\r\nfunction ListContainer({mainState , deleteList}) {\r\n\r\n\treturn (\r\n\t\t<div className='listContainer-parent-container'>\r\n\t\t\t{mainState.map( (currentValue , id) =>{ \r\n\t\t\t\tif(!currentValue){ return null}\r\n\t\t\t\telse {return <List\r\n\t\t\t\t\tkey={id}\t\r\n\t\t\t\t\tlist={currentValue}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tdeleteList={deleteList}\r\n\t\t\t\t/>}}\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListContainer;","import React , {useState} from 'react';\r\n\r\nfunction Task({task , isCompleted, isUpdating , taskId , listId , toggle , handleDelete , startUpdate , endUpdate}){\r\n\r\n\tconst [stateTask , setStateTask] = useState(task)\r\n\r\n\tconst handleTaskChange = (e) => {\r\n\t\tlet taskValue = e.target.value\r\n\t\tsetStateTask(taskValue)\r\n\t}\r\n\r\n\tif(!isUpdating){\r\n\treturn(\r\n\t\t<div className={isCompleted ? \"task-container task-container-completed\" : 'task-container'}>\r\n\t\t\t<input type='checkbox' \r\n\t\t\tname='checkbox'\r\n\t\t\tclassName='task-checkbox' checked={isCompleted}\r\n\t\t\tonChange={() => toggle(listId , taskId)}></input>\r\n\t\t\t<div className='task-text'>{task}</div>\r\n\t\t\t<div className='task-btn-container'>\r\n\t\t\t\t<button className='task-update-btn'\r\n\t\t\t\tonClick={() => startUpdate(listId , taskId)}><i className=\"bi bi-pencil-fill\"></i></button>\r\n\t\t\t\t<button \r\n\t\t\t\tonClick = {() => handleDelete(listId , taskId)}\r\n\t\t\t\tclassName='task-delete-btn'><i className=\"bi bi-trash\"></i></button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)}\r\n\telse{\r\n\t\treturn(\r\n\t\t\t<div className='task-container task-container-updating'>\r\n\t\t\t\t<input defaultValue={task} onChange={handleTaskChange}></input>\r\n\t\t\t\t<div className='task-btn-container'>\r\n\t\t\t\t<button className='task-update-btn' onClick={() => endUpdate(listId , taskId ,stateTask)}>Save</button> \r\n\t\t\t\t<button \r\n\t\t\t\tonClick = {() => handleDelete(listId , taskId)}\r\n\t\t\t\tclassName='task-delete-btn'>Delete</button>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Task;","import React , {useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Task from './task'\r\n\r\nfunction TaskContainer({list , listId , markAllAsDone , deleteList , handleDelete , handleSubmit , toggle , startUpdate , endUpdate}) {\r\n\r\n\tconst [inputValue , setInputValue] = useState('')\r\n\r\n\tconst handleInputChange = e => {\r\n\t\te.preventDefault()\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\r\n\tif(!list){return <Redirect to='/' />}\r\n\r\n\telse return (\r\n\r\n\t\t<div className='taskContainer-parent-container'>\r\n\t\t\t<div className='taskContainer-list-name'>\r\n\t\t\t\t{list.name}\r\n\t\t\t</div>\r\n\t\t\t<button className='taksContainer-deleteList-btn' onClick={() => deleteList(listId)}>\r\n\t\t\t\t<i className=\"bi bi-trash\"></i>\r\n\t\t\t\tDelete list\r\n\t\t\t</button>\r\n\t\t\t<button className='taksContainer-markAllDone-btn' onClick={() => markAllAsDone(listId)}>\r\n\t\t\t\t<i className=\"bi bi-check2-square\"></i>\r\n\t\t\t\tMark all as done \r\n\t\t\t</button>\r\n\t\t\t<Link className='taskContainer-home-link' to='/'>\r\n\t\t\t\t<i className=\"bi bi-house-door\"></i>\r\n\t\t\t\tHome\r\n\t\t\t</Link>\r\n\t\t\t<form className='taskContainer-form' onSubmit={() => handleSubmit(listId , inputValue)}>\r\n\t\t\t\t<input type='text' name='task' \r\n\t\t\t\tdefaultValue = ''\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\tplaceholder='Enter new task'  className='taskContainer-form-input '></input>\r\n\t\t\t\t<button type='submit' className='taskContainer-form-submit-btn'>\r\n\t\t\t\t\t<i className=\"bi bi-plus-circle\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t\t<div className='taskContainer-todo-container'>\r\n\t\t\t\t{list.tasks.map((currentValue , taskId) => <Task \r\n\t\t\t\tkey={taskId}\r\n\t\t\t\ttask = {currentValue.task}\r\n\t\t\t\tisCompleted = {currentValue.isCompleted}\r\n\t\t\t\tisUpdating = {currentValue.isUpdating}\r\n\t\t\t\tstartUpdate={startUpdate}\r\n\t\t\t\tendUpdate={endUpdate}\r\n\t\t\t\ttaskId={taskId}\r\n\t\t\t\tlistId={listId}\r\n\t\t\t\ttoggle = {toggle}\r\n\t\t\t\thandleDelete = {handleDelete} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskContainer;","import React , { useState } from 'react';\r\n\r\nfunction ListCreator({createNewList , cancelButton}) {\r\n\r\n\tconst [listName , setListName] = useState('')\r\n\tconst [inputTask , setInputTaskName] = useState('')\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetListName(e.target.value)\r\n\t}\r\n\r\n\tconst handleInputTaskChange = (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetInputTaskName(e.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='listCreator-parent-container'>\r\n\t\t\t<form className='listCreator-form' onSubmit={() => createNewList(listName , inputTask)}>\r\n\t\t\t\t<input className='listCreator-input' value={listName} onChange={handleInputChange} placeholder={'Enter list name'} required/>\r\n\t\t\t\t<input className='listCreator-inupt-task' value={inputTask} onChange={handleInputTaskChange} placeholder='Enter a task to get started' />\r\n\t\t\t\t<button className='listCreator-submit-btn' type='submit'>Create</button>\r\n\t\t\t\t<button className='listCreator-cancel-btn' type='button' onClick={cancelButton}>cancel</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListCreator;","import React , {useState} from 'react'\nimport ListContainer from './components/listContainer';\nimport TaskContainer from './components/taskContainer'\nimport { Link, Route , useLocation} from 'react-router-dom'\nimport ListCreator from './components/listCreator';\n\nfunction App() {\n\n\tconst [mainState , setMainState] = useState([\n\t\t{name:'your sample list' ,\n\t\t tasks:[\n\t\t\t{task:'click on the list name or any of the task to get started' ,\n\t\t\tisCompleted : false ,\n\t\t\tisUpdating : false},\n\t\t\t{task:'some task' ,\n\t\t\tisCompleted : false ,\n\t\t\tisUpdating : false}\n\t\t]}\n\t])\n\n\tconst [creatingList , setCreatingList] = useState(false)\n\n\t// List related actions\n\n\tconst deleteList = (targetId) => {\n\t\tlet stateCopy = [...mainState]\n\t\tstateCopy.splice(targetId , 1 , undefined)\n\t\tsetMainState(stateCopy)\n\t}\n\n\tconst createNewList = (listName , inputTask) => {\n\t\tlet stateCopy = [...mainState]\n\t\tif(inputTask){\n\t\t\tstateCopy.push({name:listName,tasks:[{task:inputTask,isCompleted:false,isUpdating:false}]})\n\t\t}else stateCopy.push({name:listName , tasks:[]})\n\t\tsetMainState(stateCopy)\n\t\tsetCreatingList(false)\n\t}\n\n\t//Tasks related actions\n\n\tconst toggle = (listId , taskId) => {\n\t\tlet stateCopy = [...mainState]\n\t\tstateCopy[listId].tasks[taskId].isCompleted = !stateCopy[listId].tasks[taskId].isCompleted\n\t\tsetMainState(stateCopy)\n\t}\n\n\tconst handleDelete = (listId , taskId) => {\n\t\tlet stateCopy = [...mainState]\n\t\tstateCopy[listId].tasks.splice(taskId,1)\n\t\tsetMainState(stateCopy)\n\t}\n\n\tconst handleSubmit = (listId, inputValue) =>{\n\t\tlet stateCopy = [...mainState]\n\t\tif (inputValue) {\n\t\t\tstateCopy[listId].tasks.push({task:inputValue , isCompleted:false , isUpdating:false})\n\t\t\tsetMainState(stateCopy)\n\t\t}\n\t}\n\n\tconst startUpdate = (listId , taskId) => {\n\t\tconst stateCopy = [...mainState]\n\t\tstateCopy[listId].tasks[taskId].isUpdating = true\n\t\tsetMainState(stateCopy)\n\t}\n\n\tconst endUpdate = (listId , taskId , taskValue) => {\n\t\tconst stateCopy = [...mainState]\n\t\tstateCopy[listId].tasks[taskId].isUpdating = false\n\t\tstateCopy[listId].tasks[taskId].task = taskValue\n\t\tsetMainState(stateCopy)\n\t}\n\n\tconst markAllAsDone = (listId) => {\n\t\tlet stateCopy = [...mainState]\n\t\tstateCopy[listId].tasks.map(currentValue => currentValue.isCompleted = true)\n\t\tsetMainState(stateCopy)\n\t}\n\n\tconst regexCheck = (expression) => {\n\t\tlet regex = /\\/list\\/\\d/\n\t\treturn regex.test(expression)\n\t}\n\n\tconst showCreateNewList = () => {\n\t\tsetCreatingList(true)\n\t}\n\n\tconst cancelButton = () => {\n\t\tsetCreatingList(false)\n\t}\n\n\treturn (\n\t\t\t<div className={regexCheck(useLocation().pathname) ? 'App-inTaskContainer' : 'App'}>\n\n\t\t\t\t{creatingList ? <ListCreator createNewList={createNewList} cancelButton={cancelButton} /> : null}\n\n\t\t\t\t{useLocation().pathname === '/' ? <Link to='/' className='app-heading-link'>\n\t\t\t\t\t<div className='app-heading-text'>\n\t\t\t\t\t\tYour Lists\n\t\t\t\t\t</div>\n\t\t\t\t</Link> : null}\n\t\t\t\t{useLocation().pathname === '/' ? <div className='app-createNewList'>\n\t\t\t\t\t<button onClick={showCreateNewList} className='app-createNewList-link'>\n\t\t\t\t\t<i className=\"bi bi-clipboard-plus\"></i>\n\t\t\t\t\t\tCreate New List\n\t\t\t\t\t</button>\n\t\t\t\t</div> : null}\n\t\t\t\t<Route path='/' component={ () => <ListContainer mainState={mainState} deleteList={deleteList} /> } exact/>\n\t\t\t\t<Route path={`/list/:id`} component={({ match }) => (\n\t\t\t\t\t<TaskContainer \n\t\t\t\t\t\tlist={mainState[match.params.id]} \n\t\t\t\t\t\tlistId={match.params.id} \n\t\t\t\t\t\ttoggle={toggle}\n\t\t\t\t\t\thandleDelete={handleDelete}\n\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t\tmarkAllAsDone={markAllAsDone}\n\t\t\t\t\t\tdeleteList={deleteList}\n\t\t\t\t\t\tstartUpdate={startUpdate}\n\t\t\t\t\t\tendUpdate={endUpdate}\n\t\t\t\t\t/>)} />\n\t\t\t</div> \n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}